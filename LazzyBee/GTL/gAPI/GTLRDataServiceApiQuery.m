// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   LazzyBee Backend Api (dataServiceApi/v1.1)
// Description:
//   This is an API

#import "GTLRDataServiceApiQuery.h"

#import "GTLRDataServiceApiObjects.h"

@implementation GTLRDataServiceApiQuery

@dynamic fields;

@end

@implementation GTLRDataServiceApiQuery_FindVocaById

@dynamic identifier, orderSearch;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"identifier" : @"id" };
}

+ (instancetype)queryWithIdentifier:(long long)identifier
                        orderSearch:(BOOL)orderSearch {
  NSString *pathURITemplate = @"find_voca_byId";
  GTLRDataServiceApiQuery_FindVocaById *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.identifier = identifier;
  query.orderSearch = orderSearch;
  query.expectedObjectClass = [GTLRDataServiceApi_Voca class];
  query.loggingName = @"dataServiceApi.findVocaById";
  return query;
}

@end

@implementation GTLRDataServiceApiQuery_FindVocaByQ

@dynamic orderSearch, q;

+ (instancetype)queryWithOrderSearch:(BOOL)orderSearch
                                   q:(NSString *)q {
  NSString *pathURITemplate = @"find_voca_byQ";
  GTLRDataServiceApiQuery_FindVocaByQ *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.orderSearch = orderSearch;
  query.q = q;
  query.expectedObjectClass = [GTLRDataServiceApi_Voca class];
  query.loggingName = @"dataServiceApi.findVocaByQ";
  return query;
}

@end

@implementation GTLRDataServiceApiQuery_GetDownloadUrl

@dynamic code;

+ (instancetype)queryWithCode:(NSString *)code {
  NSArray *pathParams = @[ @"code" ];
  NSString *pathURITemplate = @"downloadtarget/{code}";
  GTLRDataServiceApiQuery_GetDownloadUrl *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.code = code;
  query.expectedObjectClass = [GTLRDataServiceApi_DownloadTarget class];
  query.loggingName = @"dataServiceApi.getDownloadUrl";
  return query;
}

@end

@implementation GTLRDataServiceApiQuery_GetGroupVoca

@dynamic identifier;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"identifier" : @"id" };
}

+ (instancetype)queryWithIdentifier:(long long)identifier {
  NSString *pathURITemplate = @"get_Group_Voca";
  GTLRDataServiceApiQuery_GetGroupVoca *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.identifier = identifier;
  query.expectedObjectClass = [GTLRDataServiceApi_GroupVoca class];
  query.loggingName = @"dataServiceApi.getGroupVoca";
  return query;
}

@end

@implementation GTLRDataServiceApiQuery_GetUploadUrl

+ (instancetype)query {
  NSString *pathURITemplate = @"uploadtarget";
  GTLRDataServiceApiQuery_GetUploadUrl *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.expectedObjectClass = [GTLRDataServiceApi_UploadTarget class];
  query.loggingName = @"dataServiceApi.getUploadUrl";
  return query;
}

@end

@implementation GTLRDataServiceApiQuery_GetVocaById

@dynamic identifier;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"identifier" : @"id" };
}

+ (instancetype)queryWithIdentifier:(long long)identifier {
  NSString *pathURITemplate = @"get_voca_byId";
  GTLRDataServiceApiQuery_GetVocaById *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.identifier = identifier;
  query.expectedObjectClass = [GTLRDataServiceApi_Voca class];
  query.loggingName = @"dataServiceApi.getVocaById";
  return query;
}

@end

@implementation GTLRDataServiceApiQuery_GetVocaByQ

@dynamic q;

+ (instancetype)queryWithQ:(NSString *)q {
  NSString *pathURITemplate = @"get_voca_byQ";
  GTLRDataServiceApiQuery_GetVocaByQ *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.q = q;
  query.expectedObjectClass = [GTLRDataServiceApi_Voca class];
  query.loggingName = @"dataServiceApi.getVocaByQ";
  return query;
}

@end

@implementation GTLRDataServiceApiQuery_ListVoca

@dynamic cursorStr, level, size;

+ (instancetype)queryWithCursorStr:(NSString *)cursorStr
                             level:(NSInteger)level
                              size:(NSInteger)size {
  NSArray *pathParams = @[
    @"cursorStr", @"level", @"size"
  ];
  NSString *pathURITemplate = @"voca/{cursorStr}/{level}/{size}";
  GTLRDataServiceApiQuery_ListVoca *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.cursorStr = cursorStr;
  query.level = level;
  query.size = size;
  query.expectedObjectClass = [GTLRDataServiceApi_VocaCollection class];
  query.loggingName = @"dataServiceApi.listVoca";
  return query;
}

@end

@implementation GTLRDataServiceApiQuery_SaveVoca

+ (instancetype)queryWithObject:(GTLRDataServiceApi_Voca *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"saveVoca";
  GTLRDataServiceApiQuery_SaveVoca *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.loggingName = @"dataServiceApi.saveVoca";
  return query;
}

@end

@implementation GTLRDataServiceApiQuery_UpdateA

+ (instancetype)queryWithObject:(GTLRDataServiceApi_Voca *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"update_A";
  GTLRDataServiceApiQuery_UpdateA *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PUT"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.loggingName = @"dataServiceApi.updateA";
  return query;
}

@end

@implementation GTLRDataServiceApiQuery_UpdateD

+ (instancetype)queryWithObject:(GTLRDataServiceApi_Voca *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"update_D";
  GTLRDataServiceApiQuery_UpdateD *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PUT"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.loggingName = @"dataServiceApi.updateD";
  return query;
}

@end

@implementation GTLRDataServiceApiQuery_UpdateEDict

+ (instancetype)queryWithObject:(GTLRDataServiceApi_Voca *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"updateEDict";
  GTLRDataServiceApiQuery_UpdateEDict *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PUT"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.loggingName = @"dataServiceApi.updateEDict";
  return query;
}

@end

@implementation GTLRDataServiceApiQuery_UpdateVDict

+ (instancetype)queryWithObject:(GTLRDataServiceApi_Voca *)object {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSString *pathURITemplate = @"updateVDict";
  GTLRDataServiceApiQuery_UpdateVDict *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PUT"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.loggingName = @"dataServiceApi.updateVDict";
  return query;
}

@end
